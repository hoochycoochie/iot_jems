services:
  # producer:
  #   image: producer
  #   depends_on:
  #     - api
  #     - mongodb
  #     - pyspark
  #     - broker
  #   # networks:
  #   #   - node-network
  #   volumes:
  #     - ./csv_data:/code/csv_data

  # consumer:
  #   image: consumer
  #   depends_on:
  #     - api
  #     - mongodb
  #     - pyspark
  #     - producer
  #     - broker
  #   # networks:
  #   #   - node-network

  # api:
  #   image: api
  #   ports:
  #     - '8001:8001'
  #   depends_on:
  #     - mongodb
  #     - pyspark
  #     - broker
  #   # networks:
  #   #   - node-network
  #   volumes:
  #     - ./csv_data:/code/csv_data

  mongodb:
    image: mongo:4.4
    ports:
      - '27017:27017'
    volumes:
      #  - dbdata6:/data/db
      - ./data:/data/
    # networks:
    #   - node-network

  pyspark:
    image: jupyter/pyspark-notebook
    ports:
      - '8888:8888'
      - '4040:4040'
    environment:
      - GRANT_SUDO=yes
    user: root
    depends_on:
      - mongodb
    #  - api
    # networks:
    #   - node-network



  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker
volumes:
  dbdata6:

    # networks:
    #   node-network:
    #     driver: bridge
